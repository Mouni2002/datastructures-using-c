#include<stdio.h>
#include<stdlib.h>
struct queue{
        int data;
        struct queue *next;
};
typedef struct queue node;
node *front=NULL;
node *rare=NULL;
void nqueue(int x)
{
        node *new=(node *)malloc(sizeof(node));
        new->data=x;
        new->next=NULL;
        if(front==NULL)
        {
                front=new;
                rare=new;
        }
        else
        {
                rare->next=new;
                rare=new;
        }
}
int dequeue()
{
        int x;
        node *temp=front;
        if(front==NULL)
        {
                return -1;
        }
        else
        {
            if(front==rare)
            {
                front=rare=NULL;
            }
            else
            {
                x=temp->data;
                node *temp1=temp;
                temp=temp->next;
                front=temp;
                free(temp1);
            }
        }
        return x;
}
void display()
{
        node *temp;
        if(front==NULL)
        {
                printf("no list to print");
        }
        else
        {
                temp=front;
                while(temp!=NULL)
                {
                        printf("%d",temp->data);
                        temp=temp->next;
                }
        }
}
int main()
{
        int x,ch;
        printf("\n1.nqueue\n2.dequeue\n3.display\n4.exit");
        while(1)
        {
                printf("enter your choice");
                scanf("%d",&ch);
                switch(ch)
                {
                        case 1:printf("enter element to insert");
                               scanf("%d",&x);
                               nqueue(x);
                               break;
                        case 2:x=dequeue();
                               printf("the deleted element is %d",x);
                               break;
                        case 3:printf("the elements in th equeue is:");
                               display();
                               break;
                        case 4:exit(0);
                               break;
                }
        }
}
